openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: https://io-operations.xyz/offer-searcher
    description: Offer-searcher
paths:
  /status:
    get:
      summary: Returns a status list of kafka topics.
      parameters:
        - $ref: "#/components/parameters/Secret-Key"
      responses:
        '200':
          description: Status list of kafka topics.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Kafka-Status-Response"

  /search:
    post:
      summary: Search entities in specified topic
      parameters:
        - $ref: "#/components/parameters/Secret-Key"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Search-Request"
      responses:
        200:
          description: "Search Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
  /topics/unregister:
    post:
      summary: "Unregister kafka topic from kafka searcher"
      parameters:
        - $ref: "#/components/parameters/Topic-Query-Parameter"
        - $ref: "#/components/parameters/Secret-Key"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
  /topics/register:
    post:
      summary: "Register kafka topic from kafka searcher"
      parameters:
        - $ref: "#/components/parameters/Topic-Query-Parameter"
        - $ref: "#/components/parameters/Secret-Key"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: object
  /topics:
    get:
      summary: "Get list of registered kafka topics"
      parameters:
        - $ref: "#/components/parameters/Secret-Key"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                items:
                  type: string

components:
  schemas:
    QueryObject:
      description: "Query object"
      type: object
      properties:
        key1:
          type: string
        key2:
          type: number
        key3:
          type: boolean
        key4:
          type: object
    Field:
      description: "Field"
      type: number
      enum: [ 0, 1 ]
    Sort:
      description: "Sort"
      type: number
      enum: [ -1, 1 ]
    SearchType:
      description: "Search type"
      type: string
      enum: [ ACTUAL, UPDATES ]
    Search-Request:
      type: object
      description: Search request
      properties:
        topic:
          type: string
          description: "Kafka topic"
        query:
          $ref: "#/components/schemas/QueryObject"
          description: "Mongo query object"
        sort:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Sort"
          description: "Mongo sort object"
        fields:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Field"
          description: "Mongo fields object"
        searchType:
          $ref: "#/components/schemas/SearchType"
        skip:
          type: integer
          description: "Skip"
        limit:
          type: integer
          description: "Skip"
    SearchResponse:
      type: object
      description: "Search Response"
      properties:
        data:
          type: array
          items:
            example: { }
        hits:
          type: number
        searchType:
          $ref: "#/components/schemas/SearchType"
        skip:
          type: integer
          description: "Skip"
        limit:
          type: integer
          description: "Skip"
    Kafka-Status-Response:
      type: object
      properties:
        topic:
          type: string
        remaining:
          type: number
        ready:
          type: boolean
  parameters:
    Topic-Query-Parameter:
      in: query
      description: "Kafka topic"
      name: topic
      required: true
      schema:
        type: string
    Secret-Key:
      in: header
      description: Secret-Key
      name: Secret-Key
      required: true
      schema:
        type: string
